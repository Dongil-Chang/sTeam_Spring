<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="qna.mapper">

<update id="update">
	update tbl_qna set q_title = #{q_title}, q_content = #{q_content}
					, q_filename = #{q_filename, jdbcType=VARCHAR}
					, q_filepath = #{q_filepath, jdbcType=VARCHAR}
	where q_id = #{q_id}
</update>

<delete id="delete">
	delete from tbl_qna where q_id = #{q_id}
</delete>

<update id="read">
	update tbl_qna set q_readcnt = q_readcnt + 1 where q_id = #{q_id}
</update>

<select id="detail" resultType="qna.QnaVO">
	select tbl_qna.*, (select name from member where member.id=tbl_qna.q_writer) q_name
	from tbl_qna where q_id = #{q_id}
</select>



<insert id="insert">
	insert into tbl_qna ( q_id, q_root, q_title, q_type, q_content, q_writer, q_filename, q_filepath )  
	values( seq_qna.nextval, seq_qna.currval, #{q_title}, #{q_type}, #{q_content}, #{q_writer}
			, #{q_filename, jdbcType=VARCHAR}, #{q_filepath, jdbcType=VARCHAR} )
</insert>


<insert id="reply_insert">

<!-- root 는 원글의 root를 그대로 담는다
step 은 동일한  root 를 갖는 글에 대해 원글의 step 보다 더 큰 step 을 가진 경우 step+1 로 변경한 후
원글의 step+1 로 저장한다.
indent 는 원글의 indent + 1 -->

<![CDATA[
{
call declare
begin
	update tbl_qna set q_step = q_step+1 where q_root = #{q_root} and q_step > #{q_step};

	insert into tbl_qna(q_type, q_id, q_title, q_content, q_writer
						, q_filename, q_filepath, q_root, q_step, q_indent)
	values (#{q_type}, seq_qna.nextval, #{q_title}, #{q_content}, #{q_writer}
			, #{q_filename, jdbcType=VARCHAR}, #{q_filepath, jdbcType=VARCHAR}
			, #{q_root}, #{q_step}+1, #{q_indent}+1);
end
}
]]>
</insert>




<insert id="reply_update">

<![CDATA[
{
call declare
begin
	update tbl_qna set q_step = q_step+1 where q_root = #{q_root} and q_step > #{q_step};

	insert into tbl_qna(q_type, q_id, q_title, q_content, q_writer
						, q_filename, q_filepath, q_root, q_step, q_indent)
	values (#{q_type}, seq_qna.nextval, #{q_title}, #{q_content}, #{q_writer}
			, #{q_filename, jdbcType=VARCHAR}, #{q_filepath, jdbcType=VARCHAR}
			, #{q_root}, #{q_step}+1, #{q_indent}+1);
end
}
]]>

</insert>





<sql id="where_search">
	<if test="search == 'q_title' or search == 'q_content' ">
	where ${search} like '%'||#{keyword}||'%'
	</if> 
	<if test="search == 'q_writer' ">
	where q_writer in ( select id from member where name like '%'||#{keyword}||'%' )
	</if>
	<if test="search == 'all' ">
	where q_title like '%'||#{keyword}||'%'
	or q_content like '%'||#{keyword}||'%'
	or q_writer in ( select id from member where name like '%'||#{keyword}||'%' )
	</if>
</sql>

 
 
<select id="totalList" resultType="integer">
	select count(*) from tbl_qna  <include refid="where_search"/> 
</select> 

<select id="list" resultType="qna.QnaVO">
<!-- 페이지처리된 글 목록 조회 -->
	 select * 
	from (select rownum no, n.*, (select name from member where member.id=q_writer) q_name  
		  from (select * from tbl_qna  <include refid="where_search"/> 
		  	    order by q_root, q_step desc) n
		  order by no desc) 
	where no between #{beginList} and #{endList} 

	 
<!-- 전체 글목록 조회 -->
	<!-- select rownum no, n.*, (select name from member where member.id=writer) name
		from (select * from notice order by id) n
	 order by no desc  -->
</select>


<select id="mq_totalList" resultType="integer">
	select count(*) from tbl_qna
	where q_writer = #{id}
</select>
<select id="mq_list" resultType="qna.QnaVO">
	 select * 
	from (select rownum no, q.*, (select name from member where member.id=q_writer) name
		  from (select * from tbl_qna where q_writer = #{id}
		  	    order by q_id) q		  
		  order by no desc) q
	where no between #{q_page.beginList} and #{q_page.endList}	
</select>



	
</mapper>