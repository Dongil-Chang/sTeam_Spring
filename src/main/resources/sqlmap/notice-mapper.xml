<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notice.mapper">

<update id="update">
	update notice set title = #{title}, content = #{content}
					, filename = #{filename, jdbcType=VARCHAR}
					, filepath = #{filepath, jdbcType=VARCHAR}
	where id = #{id}
</update>

<delete id="delete">
	delete from notice where id = #{id}
</delete>

<update id="read">
	update notice set readcnt = readcnt + 1 where id = #{id}
</update>

<select id="detail" resultType="notice.NoticeVO">
	select notice.*, (select name from member where member.id=notice.writer) name
	from notice where id = #{id}
</select>



<insert id="insert">
	insert into notice (id, root, title, content, writer, filename, filepath)
	values( seq_notice.nextval, seq_notice.currval, #{title}, #{content}, #{writer}
			, #{filename, jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR})
</insert>

<insert id="reply_insert">

<!-- root 는 원글의 root를 그대로 담는다
step 은 동일한  root 를 갖는 글에 대해 원글의 step 보다 더 큰 step 을 가진 경우 step+1 로 변경한 후
원글의 step+1 로 저장한다.
indent 는 원글의 indent + 1 -->

<![CDATA[
{
call declare
begin
	update notice set step = step+1 where root = #{root} and step > #{step};

	insert into notice(id, title, content, writer
						, filename, filepath, root, step, indent)
	values (seq_notice.nextval, #{title}, #{content}, #{writer}
			, #{filename, jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR}
			, #{root}, #{step}+1, #{indent}+1);
end
}
]]>
</insert>




<insert id="reply_update">

<![CDATA[
{
call declare
begin
	update notice set step = step+1 where root = #{root} and step > #{step};

	insert into notice(id, title, content, writer
						, filename, filepath, root, step, indent)
	values (seq_notice.nextval, #{title}, #{content}, #{writer}
			, #{filename, jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR}
			, #{root}, #{step}+1, #{indent}+1);
end
}
]]>
</insert>




<sql id="where_search">
	<if test="search == 'title' or search == 'content' ">
	where ${search} like '%'||#{keyword}||'%'
	</if> 
	<if test="search == 'writer' ">
	where writer in ( select id from member where name like '%'||#{keyword}||'%' )
	</if>
	<if test="search == 'all' ">
	where title like '%'||#{keyword}||'%'
	or content like '%'||#{keyword}||'%'
	or writer in ( select id from member where name like '%'||#{keyword}||'%' )
	</if>
</sql>

<select id="totalList" resultType="integer">
	select count(*) from notice <include refid="where_search"/>
</select>

<select id="list" resultType="notice.NoticeVO">
<!-- 페이지처리된 글 목록 조회 -->
	 select * 
	from (select rownum no, n.*, (select name from member where member.id=writer) name  
		  from (select * from notice <include refid="where_search"/> 
		  	    order by root, step desc) n
		  order by no desc) 
	where no between #{beginList} and #{endList} 

	 
<!-- 전체 글목록 조회 -->
	<!-- select rownum no, n.*, (select name from member where member.id=writer) name
		from (select * from notice order by id) n
	 order by no desc  -->
</select>
	
	
	
<!-- 메인 화면에서 사용할 쿼리 -->	
<select id="main_list" resultType="notice.NoticeVO">
	select *
	from (select* from notice order by writedate desc)
	where rownum <![CDATA[ <= ]]> 5
</select>	
	
	
	
	
	
	
	
</mapper>